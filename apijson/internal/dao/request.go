// =================================================================================
// This is auto-generated by GG CLI tool only once. Fill this file as you wish.
// =================================================================================

package dao

import (
	"context"
	"github.com/glennliao/apijson-go/apijson/internal/dao/internal"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// requestDao is the manager for logic model data accessing and custom defined data operations functions management.
// You can define custom methods on it to extend its functionality as you wish.
type requestDao struct {
	*internal.RequestDao
}

var (
	// Request is globally public accessible object for table  operations.
	Request = requestDao{
		internal.NewRequestDao(),
	}
)

func (d *requestDao) M(ctx context.Context) *gdb.Model {
	return d.Ctx(ctx).OmitNil().Batch(500)
}

func (d *requestDao) MC(ctx context.Context) (*gdb.Model, internal.RequestColumns) {
	return d.M(ctx), d.Columns()
}

func (d *requestDao) DMC(ctx context.Context) (*requestDao, *gdb.Model, internal.RequestColumns) {
	m := d.M(ctx)
	return d, m, d.Columns()
}

func (d *requestDao) WithRk(ctx context.Context, id ...string) *gdb.Model {
	m := d.M(ctx)
	if len(id) == 1 {
		return m.Where(d.RowKey(), id[0])
	}
	if len(id) == 0 {
		g.Log().Warning(ctx, "withRk is len0")
		return m.Where("1 = 2")
	}
	return m.WhereIn(d.RowKey(), id)
}

func (d *requestDao) RowKey() string {
	return d.Columns().Id
}

// Fill with you ideas below.
// #b60ebd6da1cfa44f709f0895eb8a8b64a5890a0d:021026:52
