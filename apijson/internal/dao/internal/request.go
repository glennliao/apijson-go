// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// RequestDao is the data access object for table request.
type RequestDao struct {
	table   string         // table is the underlying table name of the DAO.
	group   string         // group is the database configuration group name of current DAO.
	columns RequestColumns // columns contains all the column names of Table for convenient usage.
}

// RequestColumns defines and stores column names for table request.
type RequestColumns struct {
	Id        string // 唯一标识
	Debug     string // 是否为 DEBUG 调试数据，只允许在开发环境使用，测试和线上环境禁用：0-否，1-是。
	Version   string // GET,HEAD可用任意结构访问任意开放内容，不需要这个字段。 其它的操作因为写入了结构和内容，所以都需要，按照不同的version选择对应的structure。  自动化版本管理： Request JSON最外层可以传  “version”:Integer 。 1.未传或 <= 0，用最新版。 “@order”:”version-“ 2.已传且 > 0，用version以上的可用版本的最低版本。 “@order”:”version+”, “version{}”:”>={version}”
	Method    string // 只限于GET,HEAD外的操作方法。
	Tag       string // 标签
	Structure string // 结构。
	Detail    string // 详细说明
	CreatedAt string //
}

// requestColumns holds the columns for table request.
var requestColumns = RequestColumns{
	Id:        "id",
	Debug:     "debug",
	Version:   "version",
	Method:    "method",
	Tag:       "tag",
	Structure: "structure",
	Detail:    "detail",
	CreatedAt: "created_at",
}

// NewRequestDao creates and returns a new DAO object for table data access.
func NewRequestDao() *RequestDao {
	return &RequestDao{
		group:   "default",
		table:   "_request",
		columns: requestColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *RequestDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *RequestDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *RequestDao) Columns() RequestColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *RequestDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *RequestDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *RequestDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
